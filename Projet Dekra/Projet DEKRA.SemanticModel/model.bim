{
  "compatibilityLevel": 1550,
  "model": {
    "annotations": [
      {
        "name": "PBI_QueryOrder",
        "value": "[\"data\",\"Engine Position (Instruction)\",\"Drive (Instruction)\",\"Errors in data\"]"
      },
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "1"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.139.2054.0 (24.12)+334ca1c95b576cc53924655643b0d36f21caac55"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DevMode\"]"
      }
    ],
    "culture": "en-US",
    "cultures": [
      {
        "name": "en-US",
        "linguisticMetadata": {
          "content": {
            "Language": "en-US",
            "Version": "1.0.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "expressions": [
      {
        "name": "Errors in data",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "Source = data,",
          "  #\"Detected Type Mismatches\" = let",
          "    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),",
          "    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),",
          "    fieldNames = Record.FieldNames(recordTypeFields),",
          "    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),",
          "    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = \"The type of the value does not match the type of the column.\", Detail = v], fieldTypes{i}})",
          "in",
          "    Table.TransformColumns(Source, pairs),",
          "  #\"Added Index\" = Table.AddIndexColumn(#\"Detected Type Mismatches\", \"Row Number\" ,1),",
          "  #\"Kept Errors\" = Table.SelectRowsWithErrors(#\"Added Index\", {\"Year\", \"Brand\", \"MODELS\", \"Class\", \"Performance Indicator\", \"HP\", \"Torque\", \"Weight\", \"Wt/HP Ratio\", \"Engine position\", \"Drive\", \"Cylinder\", \"Country\", \"0-60 Sec\", \"0-100 Sec\", \"Top Speed\", \"60-0 Feet\", \"100-0 Feet\", \"60mph g's\", \"100mph g's\", \"60-100 sec\"}),",
          "  #\"Reordered Columns\" = Table.ReorderColumns(#\"Kept Errors\", {\"Row Number\", \"Year\", \"Brand\", \"MODELS\", \"Class\", \"Performance Indicator\", \"HP\", \"Torque\", \"Weight\", \"Wt/HP Ratio\", \"Engine position\", \"Drive\", \"Cylinder\", \"Country\", \"0-60 Sec\", \"0-100 Sec\", \"Top Speed\", \"60-0 Feet\", \"100-0 Feet\", \"60mph g's\", \"100mph g's\", \"60-100 sec\"})",
          "in",
          "    #\"Reordered Columns\""
        ],
        "kind": "m",
        "lineageTag": "5fb5f8a2-1183-4a86-acda-6d12341b64cc",
        "queryGroup": "Query Errors - 30/01/2025 17:14:35"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "description": "Errors in queries that were loaded on 30/01/2025 17:14:35.",
        "folder": "Query Errors - 30/01/2025 17:14:35"
      }
    ],
    "sourceQueryCulture": "fr-FR",
    "tables": [
      {
        "name": "data",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "550370b2-10d3-4251-9509-8944891a474e",
            "sourceColumn": "Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Brand",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "aebd467a-69a3-4ab1-8108-b63fec104b08",
            "sourceColumn": "Brand",
            "summarizeBy": "none"
          },
          {
            "name": "MODELS",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3f5f90c2-8094-4f0b-9ffe-b61d0a0dd3e1",
            "sourceColumn": "MODELS",
            "summarizeBy": "none"
          },
          {
            "name": "Class",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "86fd659b-b30c-4758-bb7d-2ccac92ec580",
            "sourceColumn": "Class",
            "summarizeBy": "none"
          },
          {
            "name": "Performance Indicator",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4ea70573-706e-4c36-8729-d5742e408b63",
            "sourceColumn": "Performance Indicator",
            "summarizeBy": "sum"
          },
          {
            "name": "HP",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "63bf0023-44f2-41a1-a991-94307d834619",
            "sourceColumn": "HP",
            "summarizeBy": "sum"
          },
          {
            "name": "Torque",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a57957c1-3262-43b3-a945-257eb6aa2ba4",
            "sourceColumn": "Torque",
            "summarizeBy": "sum"
          },
          {
            "name": "Weight",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c6028968-5edd-4cab-9e01-11e8b0937e6b",
            "sourceColumn": "Weight",
            "summarizeBy": "sum"
          },
          {
            "name": "Wt/HP Ratio",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "73ec23c5-c453-4e42-94cb-1247f486ab3e",
            "sourceColumn": "Wt/HP Ratio",
            "summarizeBy": "sum"
          },
          {
            "name": "Engine position",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c252ad42-7adf-465d-bc5b-c8b028c5e72d",
            "sourceColumn": "Engine position",
            "summarizeBy": "none"
          },
          {
            "name": "Drive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f79837be-0643-416c-9ee9-58af7706cfe4",
            "sourceColumn": "Drive",
            "summarizeBy": "none"
          },
          {
            "name": "Cylinder",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "07984744-60a5-4a55-bf00-0fe0d4c4107e",
            "sourceColumn": "Cylinder",
            "summarizeBy": "none"
          },
          {
            "name": "Country",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7fa2345f-2ca9-4443-a29a-b146fc3ee570",
            "sourceColumn": "Country",
            "summarizeBy": "none"
          },
          {
            "name": "0-60 Sec",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0283cdf0-b523-452c-8c21-ead55a7d9e4d",
            "sourceColumn": "0-60 Sec",
            "summarizeBy": "none"
          },
          {
            "name": "0-100 Sec",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "99b6774c-16e5-44b4-9e69-b317f59f4738",
            "sourceColumn": "0-100 Sec",
            "summarizeBy": "none"
          },
          {
            "name": "Top Speed",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e603d28a-3813-4042-8c88-afc68b8be56d",
            "sourceColumn": "Top Speed",
            "summarizeBy": "sum"
          },
          {
            "name": "60-0 Feet",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "53011375-a27f-4f1b-9a52-0224c8c24bd4",
            "sourceColumn": "60-0 Feet",
            "summarizeBy": "none"
          },
          {
            "name": "100-0 Feet",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a496606f-75a8-4cde-abb2-c9a30eb56353",
            "sourceColumn": "100-0 Feet",
            "summarizeBy": "none"
          },
          {
            "name": "60mph g's",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "668770d8-1f40-4c03-8bad-70f8e393049f",
            "sourceColumn": "60mph g's",
            "summarizeBy": "sum"
          },
          {
            "name": "100mph g's",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e47b034a-a3a2-4d71-978c-25c397fba991",
            "sourceColumn": "100mph g's",
            "summarizeBy": "sum"
          },
          {
            "name": "60-100 sec",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "54047f65-b1f8-4fc5-84a0-31cf8df88544",
            "sourceColumn": "60-100 sec",
            "summarizeBy": "none"
          },
          {
            "name": "ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d1d41402-2511-41f2-b149-df3a8be14303",
            "sourceColumn": "ID",
            "summarizeBy": "count"
          },
          {
            "name": "ID Model",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d7a48f38-5891-430c-bb2c-ca633c919dc7",
            "sourceColumn": "ID Model",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "1db72cf6-a6fb-4ca7-b99c-08e4160cff8a",
        "partitions": [
          {
            "name": "data",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\boudl\\Documents\\Projet Dekra\\PBI_AUTO.github.io\\Projet Dekra\\Test-data.xlsx\"), null, true),",
                "    data_Sheet = Source{[Item=\"data\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(data_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Year\", Int64.Type}, {\"Brand\", type text}, {\"MODELS\", type any}, {\"Class\", type text}, {\"Performance Indicator\", Int64.Type}, {\"HP\", Int64.Type}, {\"Torque\", Int64.Type}, {\"Weight\", Int64.Type}, {\"Wt/HP Ratio\", type number}, {\"Engine position\", type text}, {\"Drive\", type text}, {\"Cylinder\", type any}, {\"Country\", type text}, {\"0-60 Sec\", type any}, {\"0-100 Sec\", type any}, {\"Top Speed\", type number}, {\"60-0 Feet\", type any}, {\"100-0 Feet\", type any}, {\"60mph g's\", type number}, {\"100mph g's\", type number}, {\"60-100 sec\", type any}}),",
                "    // Création colonne Index",
                "    #\"Added column Index\" = Table.AddIndexColumn(#\"Changed Type\", \"Index\", 1, 1, Int64.Type),",
                "    // Positionnement de la colonne en 1er",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added column Index\",{\"Index\", \"Year\", \"Brand\", \"MODELS\", \"Class\", \"Performance Indicator\", \"HP\", \"Torque\", \"Weight\", \"Wt/HP Ratio\", \"Engine position\", \"Drive\", \"Cylinder\", \"Country\", \"0-60 Sec\", \"0-100 Sec\", \"Top Speed\", \"60-0 Feet\", \"100-0 Feet\", \"60mph g's\", \"100mph g's\", \"60-100 sec\"}),",
                "    // Renommage de la colonne Index en ID",
                "    #\"Renamed Column Index => ID\" = Table.RenameColumns(#\"Reordered Columns\",{{\"Index\", \"ID\"}}),",
                "    #\"Added column ID Model\" = Table.AddColumn(#\"Renamed Column Index => ID\", \"ID Model\", each Text.PadStart(Text.From([Year]) & \"_\" & [Brand] & \"_\" & Text.From([MODELS]) & \"_\" & Text.From([HP]) & \"_\" & Text.From([Torque]), 15, \"0\"))",
                "in",
                "    #\"Added column ID Model\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Engine Position (Instruction)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Column1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e6b38c53-e27c-4f5e-ad97-8c5603494bf4",
            "sourceColumn": "Column1",
            "summarizeBy": "none"
          },
          {
            "name": "Column2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "67070d8f-a668-413f-86ff-c75b56ef4713",
            "sourceColumn": "Column2",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "f94997e9-a94f-40dd-9f9e-ee07e0051a0c",
        "partitions": [
          {
            "name": "Engine Position (Instruction)",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\boudl\\Documents\\Projet Dekra\\PBI_AUTO.github.io\\Projet Dekra\\Test-data.xlsx\")),",
                "    Instruction_sheet = Source{[Item=\"Instruction\",Kind=\"Sheet\"]}[Data],",
                "    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),",
                "    #\"Added Custom\" = Table.AddColumn(Instruction_sheet, \"IsEmptyRow\", each try List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_))) otherwise false),",
                "    #\"Added Index\" = Table.AddIndexColumn(#\"Added Custom\", \"Index\", -1),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Index\", \"Section\", each if [IsEmptyRow] then -1 else if try #\"Added Index\"[IsEmptyRow]{[Index]} otherwise true then [Index] else null),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Added Custom1\", each not [IsEmptyRow]),",
                "    #\"Filled Down\" = Table.FillDown(#\"Removed Blank Rows\", {\"Section\"}),",
                "    #\"Grouped Rows\" = Table.Group(#\"Filled Down\", {\"Section\"}, {{\"Rows\", each _}}, GroupKind.Local),",
                "    #\"Selected Group\" = #\"Grouped Rows\"[Rows]{6},",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Selected Group\", {\"IsEmptyRow\", \"Index\", \"Section\"}),",
                "    #\"Removed Top Rows\" = Table.Skip(#\"Removed Columns\", each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 1)) otherwise false),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Top Rows\", List.Select(Table.ColumnNames(#\"Removed Top Rows\"), each try not List.IsEmpty(FilterNullAndWhitespace(Table.Column(#\"Removed Top Rows\", _))) otherwise true)),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"Column1\", type text}, {\"Column2\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Drive (Instruction)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Column1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "87bb2b99-cfa8-44f2-be46-e69a516ed043",
            "sourceColumn": "Column1",
            "summarizeBy": "none"
          },
          {
            "name": "Column2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a4436822-3223-4109-a846-276451386e6c",
            "sourceColumn": "Column2",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "396f9dba-9874-4d9e-88e8-02f02a5ef94d",
        "partitions": [
          {
            "name": "Drive (Instruction)",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\boudl\\Documents\\Projet Dekra\\PBI_AUTO.github.io\\Projet Dekra\\Test-data.xlsx\")),",
                "    Instruction_sheet = Source{[Item=\"Instruction\",Kind=\"Sheet\"]}[Data],",
                "    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),",
                "    #\"Added Custom\" = Table.AddColumn(Instruction_sheet, \"IsEmptyRow\", each try List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_))) otherwise false),",
                "    #\"Added Index\" = Table.AddIndexColumn(#\"Added Custom\", \"Index\", -1),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Index\", \"Section\", each if [IsEmptyRow] then -1 else if try #\"Added Index\"[IsEmptyRow]{[Index]} otherwise true then [Index] else null),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Added Custom1\", each not [IsEmptyRow]),",
                "    #\"Filled Down\" = Table.FillDown(#\"Removed Blank Rows\", {\"Section\"}),",
                "    #\"Grouped Rows\" = Table.Group(#\"Filled Down\", {\"Section\"}, {{\"Rows\", each _}}, GroupKind.Local),",
                "    #\"Selected Group\" = #\"Grouped Rows\"[Rows]{7},",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Selected Group\", {\"IsEmptyRow\", \"Index\", \"Section\"}),",
                "    #\"Removed Top Rows\" = Table.Skip(#\"Removed Columns\", each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 1)) otherwise false),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Top Rows\", List.Select(Table.ColumnNames(#\"Removed Top Rows\"), each try not List.IsEmpty(FilterNullAndWhitespace(Table.Column(#\"Removed Top Rows\", _))) otherwise true)),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"Column1\", type text}, {\"Column2\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      }
    ]
  }
}